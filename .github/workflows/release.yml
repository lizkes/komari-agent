name: Release Binaries

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:
    inputs:
      tag:
        description: "Tag to use for the image (must start with v)"
        required: true
        type: string

permissions:
  contents: write

jobs:
  create-release:
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' || (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/'))
    outputs:
      tag_name: ${{ steps.version.outputs.tag }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Determine version tag
        id: version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            TAG="${{ github.event.inputs.tag }}"
            if [[ ! "$TAG" =~ ^v.* ]]; then
              echo "错误: Tag必须以'v'开头 (例如: v1.0.0)"
              exit 1
            fi
            echo "tag=$TAG" >> $GITHUB_OUTPUT
          else
            echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          fi

      - name: Create Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create ${{ steps.version.outputs.tag }} \
            --title "Release ${{ steps.version.outputs.tag }}" \
            --notes "自动发布 ${{ steps.version.outputs.tag }}" \
            --repo ${{ github.repository }}

  build-and-upload:
    runs-on: ubuntu-latest
    needs: create-release

    strategy:
      matrix:
        exclude:
          - goos: windows
            goarch: arm
          - goos: darwin
            goarch: 386
          - goos: darwin
            goarch: arm
        goos: [windows, linux, darwin, freebsd]
        goarch: [amd64, arm64, 386, arm]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.23"

      - name: Build binary
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
          CGO_ENABLED: 0
          VERSION: ${{ needs.create-release.outputs.tag_name }}
        run: |
          BINARY_NAME=komari-agent-${{ matrix.goos }}-${{ matrix.goarch }}
          if [ "${{ matrix.goos }}" = "windows" ]; then
            BINARY_NAME=${BINARY_NAME}.exe
          elif [ "${{ matrix.goos }}" = "darwin" ]; then
            # macOS binaries typically do not have a file extension
            true
          fi
          go build -trimpath -ldflags="-s -w -X github.com/komari-monitor/komari-agent/update.CurrentVersion=${VERSION}" -o $BINARY_NAME

      - name: Upload binary to release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          BINARY_NAME=komari-agent-${{ matrix.goos }}-${{ matrix.goarch }}
          if [ "${{ matrix.goos }}" = "windows" ]; then
            BINARY_NAME=${BINARY_NAME}.exe
          elif [ "${{ matrix.goos }}" = "darwin" ]; then
            true
          fi
          gh release upload ${{ needs.create-release.outputs.tag_name }} $BINARY_NAME --repo ${{ github.repository }}
        shell: bash
