// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v3.21.12
// source: monitor.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 客户端请求消息
type MonitorRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Message:
	//
	//	*MonitorRequest_Auth
	//	*MonitorRequest_Report
	//	*MonitorRequest_PingResult
	Message       isMonitorRequest_Message `protobuf_oneof:"message"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MonitorRequest) Reset() {
	*x = MonitorRequest{}
	mi := &file_monitor_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MonitorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MonitorRequest) ProtoMessage() {}

func (x *MonitorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_monitor_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MonitorRequest.ProtoReflect.Descriptor instead.
func (*MonitorRequest) Descriptor() ([]byte, []int) {
	return file_monitor_proto_rawDescGZIP(), []int{0}
}

func (x *MonitorRequest) GetMessage() isMonitorRequest_Message {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *MonitorRequest) GetAuth() *AuthRequest {
	if x != nil {
		if x, ok := x.Message.(*MonitorRequest_Auth); ok {
			return x.Auth
		}
	}
	return nil
}

func (x *MonitorRequest) GetReport() *MonitorReport {
	if x != nil {
		if x, ok := x.Message.(*MonitorRequest_Report); ok {
			return x.Report
		}
	}
	return nil
}

func (x *MonitorRequest) GetPingResult() *PingResult {
	if x != nil {
		if x, ok := x.Message.(*MonitorRequest_PingResult); ok {
			return x.PingResult
		}
	}
	return nil
}

type isMonitorRequest_Message interface {
	isMonitorRequest_Message()
}

type MonitorRequest_Auth struct {
	Auth *AuthRequest `protobuf:"bytes,1,opt,name=auth,proto3,oneof"`
}

type MonitorRequest_Report struct {
	Report *MonitorReport `protobuf:"bytes,2,opt,name=report,proto3,oneof"`
}

type MonitorRequest_PingResult struct {
	PingResult *PingResult `protobuf:"bytes,3,opt,name=ping_result,json=pingResult,proto3,oneof"`
}

func (*MonitorRequest_Auth) isMonitorRequest_Message() {}

func (*MonitorRequest_Report) isMonitorRequest_Message() {}

func (*MonitorRequest_PingResult) isMonitorRequest_Message() {}

// 服务端响应消息
type MonitorResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Message:
	//
	//	*MonitorResponse_AuthResponse
	//	*MonitorResponse_TaskRequest
	//	*MonitorResponse_Error
	Message       isMonitorResponse_Message `protobuf_oneof:"message"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MonitorResponse) Reset() {
	*x = MonitorResponse{}
	mi := &file_monitor_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MonitorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MonitorResponse) ProtoMessage() {}

func (x *MonitorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_monitor_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MonitorResponse.ProtoReflect.Descriptor instead.
func (*MonitorResponse) Descriptor() ([]byte, []int) {
	return file_monitor_proto_rawDescGZIP(), []int{1}
}

func (x *MonitorResponse) GetMessage() isMonitorResponse_Message {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *MonitorResponse) GetAuthResponse() *AuthResponse {
	if x != nil {
		if x, ok := x.Message.(*MonitorResponse_AuthResponse); ok {
			return x.AuthResponse
		}
	}
	return nil
}

func (x *MonitorResponse) GetTaskRequest() *TaskRequest {
	if x != nil {
		if x, ok := x.Message.(*MonitorResponse_TaskRequest); ok {
			return x.TaskRequest
		}
	}
	return nil
}

func (x *MonitorResponse) GetError() *ErrorResponse {
	if x != nil {
		if x, ok := x.Message.(*MonitorResponse_Error); ok {
			return x.Error
		}
	}
	return nil
}

type isMonitorResponse_Message interface {
	isMonitorResponse_Message()
}

type MonitorResponse_AuthResponse struct {
	AuthResponse *AuthResponse `protobuf:"bytes,1,opt,name=auth_response,json=authResponse,proto3,oneof"`
}

type MonitorResponse_TaskRequest struct {
	TaskRequest *TaskRequest `protobuf:"bytes,2,opt,name=task_request,json=taskRequest,proto3,oneof"`
}

type MonitorResponse_Error struct {
	Error *ErrorResponse `protobuf:"bytes,3,opt,name=error,proto3,oneof"`
}

func (*MonitorResponse_AuthResponse) isMonitorResponse_Message() {}

func (*MonitorResponse_TaskRequest) isMonitorResponse_Message() {}

func (*MonitorResponse_Error) isMonitorResponse_Message() {}

// 认证请求
type AuthRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Token         string                 `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuthRequest) Reset() {
	*x = AuthRequest{}
	mi := &file_monitor_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthRequest) ProtoMessage() {}

func (x *AuthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_monitor_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthRequest.ProtoReflect.Descriptor instead.
func (*AuthRequest) Descriptor() ([]byte, []int) {
	return file_monitor_proto_rawDescGZIP(), []int{2}
}

func (x *AuthRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

// 认证响应
type AuthResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,2,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AuthResponse) Reset() {
	*x = AuthResponse{}
	mi := &file_monitor_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AuthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthResponse) ProtoMessage() {}

func (x *AuthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_monitor_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthResponse.ProtoReflect.Descriptor instead.
func (*AuthResponse) Descriptor() ([]byte, []int) {
	return file_monitor_proto_rawDescGZIP(), []int{3}
}

func (x *AuthResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *AuthResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

// 监控报告 (对应 common.Report)
type MonitorReport struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uuid          string                 `protobuf:"bytes,1,opt,name=uuid,proto3" json:"uuid,omitempty"`
	Cpu           *CPUReport             `protobuf:"bytes,2,opt,name=cpu,proto3" json:"cpu,omitempty"`
	Ram           *RamReport             `protobuf:"bytes,3,opt,name=ram,proto3" json:"ram,omitempty"`
	Swap          *RamReport             `protobuf:"bytes,4,opt,name=swap,proto3" json:"swap,omitempty"`
	Load          *LoadReport            `protobuf:"bytes,5,opt,name=load,proto3" json:"load,omitempty"`
	Disk          *DiskReport            `protobuf:"bytes,6,opt,name=disk,proto3" json:"disk,omitempty"`
	Network       *NetworkReport         `protobuf:"bytes,7,opt,name=network,proto3" json:"network,omitempty"`
	Connections   *ConnectionsReport     `protobuf:"bytes,8,opt,name=connections,proto3" json:"connections,omitempty"`
	Uptime        int64                  `protobuf:"varint,9,opt,name=uptime,proto3" json:"uptime,omitempty"`
	Process       int32                  `protobuf:"varint,10,opt,name=process,proto3" json:"process,omitempty"`
	Message       string                 `protobuf:"bytes,11,opt,name=message,proto3" json:"message,omitempty"`
	Method        string                 `protobuf:"bytes,12,opt,name=method,proto3" json:"method,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	Type          string                 `protobuf:"bytes,14,opt,name=type,proto3" json:"type,omitempty"` // "report" 类型标识
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MonitorReport) Reset() {
	*x = MonitorReport{}
	mi := &file_monitor_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MonitorReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MonitorReport) ProtoMessage() {}

func (x *MonitorReport) ProtoReflect() protoreflect.Message {
	mi := &file_monitor_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MonitorReport.ProtoReflect.Descriptor instead.
func (*MonitorReport) Descriptor() ([]byte, []int) {
	return file_monitor_proto_rawDescGZIP(), []int{4}
}

func (x *MonitorReport) GetUuid() string {
	if x != nil {
		return x.Uuid
	}
	return ""
}

func (x *MonitorReport) GetCpu() *CPUReport {
	if x != nil {
		return x.Cpu
	}
	return nil
}

func (x *MonitorReport) GetRam() *RamReport {
	if x != nil {
		return x.Ram
	}
	return nil
}

func (x *MonitorReport) GetSwap() *RamReport {
	if x != nil {
		return x.Swap
	}
	return nil
}

func (x *MonitorReport) GetLoad() *LoadReport {
	if x != nil {
		return x.Load
	}
	return nil
}

func (x *MonitorReport) GetDisk() *DiskReport {
	if x != nil {
		return x.Disk
	}
	return nil
}

func (x *MonitorReport) GetNetwork() *NetworkReport {
	if x != nil {
		return x.Network
	}
	return nil
}

func (x *MonitorReport) GetConnections() *ConnectionsReport {
	if x != nil {
		return x.Connections
	}
	return nil
}

func (x *MonitorReport) GetUptime() int64 {
	if x != nil {
		return x.Uptime
	}
	return 0
}

func (x *MonitorReport) GetProcess() int32 {
	if x != nil {
		return x.Process
	}
	return 0
}

func (x *MonitorReport) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *MonitorReport) GetMethod() string {
	if x != nil {
		return x.Method
	}
	return ""
}

func (x *MonitorReport) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *MonitorReport) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

// CPU报告
type CPUReport struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Cores         int32                  `protobuf:"varint,2,opt,name=cores,proto3" json:"cores,omitempty"`
	Arch          string                 `protobuf:"bytes,3,opt,name=arch,proto3" json:"arch,omitempty"`
	Usage         float64                `protobuf:"fixed64,4,opt,name=usage,proto3" json:"usage,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CPUReport) Reset() {
	*x = CPUReport{}
	mi := &file_monitor_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CPUReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CPUReport) ProtoMessage() {}

func (x *CPUReport) ProtoReflect() protoreflect.Message {
	mi := &file_monitor_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CPUReport.ProtoReflect.Descriptor instead.
func (*CPUReport) Descriptor() ([]byte, []int) {
	return file_monitor_proto_rawDescGZIP(), []int{5}
}

func (x *CPUReport) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CPUReport) GetCores() int32 {
	if x != nil {
		return x.Cores
	}
	return 0
}

func (x *CPUReport) GetArch() string {
	if x != nil {
		return x.Arch
	}
	return ""
}

func (x *CPUReport) GetUsage() float64 {
	if x != nil {
		return x.Usage
	}
	return 0
}

// GPU报告
type GPUReport struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Usage         float64                `protobuf:"fixed64,2,opt,name=usage,proto3" json:"usage,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GPUReport) Reset() {
	*x = GPUReport{}
	mi := &file_monitor_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GPUReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GPUReport) ProtoMessage() {}

func (x *GPUReport) ProtoReflect() protoreflect.Message {
	mi := &file_monitor_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GPUReport.ProtoReflect.Descriptor instead.
func (*GPUReport) Descriptor() ([]byte, []int) {
	return file_monitor_proto_rawDescGZIP(), []int{6}
}

func (x *GPUReport) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GPUReport) GetUsage() float64 {
	if x != nil {
		return x.Usage
	}
	return 0
}

// 内存/交换分区报告
type RamReport struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Total         int64                  `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Used          int64                  `protobuf:"varint,2,opt,name=used,proto3" json:"used,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RamReport) Reset() {
	*x = RamReport{}
	mi := &file_monitor_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RamReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RamReport) ProtoMessage() {}

func (x *RamReport) ProtoReflect() protoreflect.Message {
	mi := &file_monitor_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RamReport.ProtoReflect.Descriptor instead.
func (*RamReport) Descriptor() ([]byte, []int) {
	return file_monitor_proto_rawDescGZIP(), []int{7}
}

func (x *RamReport) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *RamReport) GetUsed() int64 {
	if x != nil {
		return x.Used
	}
	return 0
}

// 负载报告
type LoadReport struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Load1         float64                `protobuf:"fixed64,1,opt,name=load1,proto3" json:"load1,omitempty"`
	Load5         float64                `protobuf:"fixed64,2,opt,name=load5,proto3" json:"load5,omitempty"`
	Load15        float64                `protobuf:"fixed64,3,opt,name=load15,proto3" json:"load15,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoadReport) Reset() {
	*x = LoadReport{}
	mi := &file_monitor_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoadReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadReport) ProtoMessage() {}

func (x *LoadReport) ProtoReflect() protoreflect.Message {
	mi := &file_monitor_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadReport.ProtoReflect.Descriptor instead.
func (*LoadReport) Descriptor() ([]byte, []int) {
	return file_monitor_proto_rawDescGZIP(), []int{8}
}

func (x *LoadReport) GetLoad1() float64 {
	if x != nil {
		return x.Load1
	}
	return 0
}

func (x *LoadReport) GetLoad5() float64 {
	if x != nil {
		return x.Load5
	}
	return 0
}

func (x *LoadReport) GetLoad15() float64 {
	if x != nil {
		return x.Load15
	}
	return 0
}

// 磁盘报告
type DiskReport struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Total         int64                  `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	Used          int64                  `protobuf:"varint,2,opt,name=used,proto3" json:"used,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DiskReport) Reset() {
	*x = DiskReport{}
	mi := &file_monitor_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DiskReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiskReport) ProtoMessage() {}

func (x *DiskReport) ProtoReflect() protoreflect.Message {
	mi := &file_monitor_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiskReport.ProtoReflect.Descriptor instead.
func (*DiskReport) Descriptor() ([]byte, []int) {
	return file_monitor_proto_rawDescGZIP(), []int{9}
}

func (x *DiskReport) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *DiskReport) GetUsed() int64 {
	if x != nil {
		return x.Used
	}
	return 0
}

// 网络报告
type NetworkReport struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Up            int64                  `protobuf:"varint,1,opt,name=up,proto3" json:"up,omitempty"`
	Down          int64                  `protobuf:"varint,2,opt,name=down,proto3" json:"down,omitempty"`
	TotalUp       int64                  `protobuf:"varint,3,opt,name=total_up,json=totalUp,proto3" json:"total_up,omitempty"`
	TotalDown     int64                  `protobuf:"varint,4,opt,name=total_down,json=totalDown,proto3" json:"total_down,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NetworkReport) Reset() {
	*x = NetworkReport{}
	mi := &file_monitor_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NetworkReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NetworkReport) ProtoMessage() {}

func (x *NetworkReport) ProtoReflect() protoreflect.Message {
	mi := &file_monitor_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NetworkReport.ProtoReflect.Descriptor instead.
func (*NetworkReport) Descriptor() ([]byte, []int) {
	return file_monitor_proto_rawDescGZIP(), []int{10}
}

func (x *NetworkReport) GetUp() int64 {
	if x != nil {
		return x.Up
	}
	return 0
}

func (x *NetworkReport) GetDown() int64 {
	if x != nil {
		return x.Down
	}
	return 0
}

func (x *NetworkReport) GetTotalUp() int64 {
	if x != nil {
		return x.TotalUp
	}
	return 0
}

func (x *NetworkReport) GetTotalDown() int64 {
	if x != nil {
		return x.TotalDown
	}
	return 0
}

// 连接数报告
type ConnectionsReport struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tcp           int32                  `protobuf:"varint,1,opt,name=tcp,proto3" json:"tcp,omitempty"`
	Udp           int32                  `protobuf:"varint,2,opt,name=udp,proto3" json:"udp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConnectionsReport) Reset() {
	*x = ConnectionsReport{}
	mi := &file_monitor_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectionsReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectionsReport) ProtoMessage() {}

func (x *ConnectionsReport) ProtoReflect() protoreflect.Message {
	mi := &file_monitor_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectionsReport.ProtoReflect.Descriptor instead.
func (*ConnectionsReport) Descriptor() ([]byte, []int) {
	return file_monitor_proto_rawDescGZIP(), []int{11}
}

func (x *ConnectionsReport) GetTcp() int32 {
	if x != nil {
		return x.Tcp
	}
	return 0
}

func (x *ConnectionsReport) GetUdp() int32 {
	if x != nil {
		return x.Udp
	}
	return 0
}

// 任务请求
type TaskRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Task:
	//
	//	*TaskRequest_Terminal
	//	*TaskRequest_Exec
	//	*TaskRequest_Ping
	Task          isTaskRequest_Task `protobuf_oneof:"task"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskRequest) Reset() {
	*x = TaskRequest{}
	mi := &file_monitor_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskRequest) ProtoMessage() {}

func (x *TaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_monitor_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskRequest.ProtoReflect.Descriptor instead.
func (*TaskRequest) Descriptor() ([]byte, []int) {
	return file_monitor_proto_rawDescGZIP(), []int{12}
}

func (x *TaskRequest) GetTask() isTaskRequest_Task {
	if x != nil {
		return x.Task
	}
	return nil
}

func (x *TaskRequest) GetTerminal() *TerminalTask {
	if x != nil {
		if x, ok := x.Task.(*TaskRequest_Terminal); ok {
			return x.Terminal
		}
	}
	return nil
}

func (x *TaskRequest) GetExec() *ExecTask {
	if x != nil {
		if x, ok := x.Task.(*TaskRequest_Exec); ok {
			return x.Exec
		}
	}
	return nil
}

func (x *TaskRequest) GetPing() *PingTask {
	if x != nil {
		if x, ok := x.Task.(*TaskRequest_Ping); ok {
			return x.Ping
		}
	}
	return nil
}

type isTaskRequest_Task interface {
	isTaskRequest_Task()
}

type TaskRequest_Terminal struct {
	Terminal *TerminalTask `protobuf:"bytes,1,opt,name=terminal,proto3,oneof"`
}

type TaskRequest_Exec struct {
	Exec *ExecTask `protobuf:"bytes,2,opt,name=exec,proto3,oneof"`
}

type TaskRequest_Ping struct {
	Ping *PingTask `protobuf:"bytes,3,opt,name=ping,proto3,oneof"`
}

func (*TaskRequest_Terminal) isTaskRequest_Task() {}

func (*TaskRequest_Exec) isTaskRequest_Task() {}

func (*TaskRequest_Ping) isTaskRequest_Task() {}

// 终端任务
type TerminalTask struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RequestId     string                 `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"` // "terminal"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TerminalTask) Reset() {
	*x = TerminalTask{}
	mi := &file_monitor_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TerminalTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerminalTask) ProtoMessage() {}

func (x *TerminalTask) ProtoReflect() protoreflect.Message {
	mi := &file_monitor_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerminalTask.ProtoReflect.Descriptor instead.
func (*TerminalTask) Descriptor() ([]byte, []int) {
	return file_monitor_proto_rawDescGZIP(), []int{13}
}

func (x *TerminalTask) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *TerminalTask) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 执行任务
type ExecTask struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Command       string                 `protobuf:"bytes,2,opt,name=command,proto3" json:"command,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"` // "exec"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecTask) Reset() {
	*x = ExecTask{}
	mi := &file_monitor_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecTask) ProtoMessage() {}

func (x *ExecTask) ProtoReflect() protoreflect.Message {
	mi := &file_monitor_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecTask.ProtoReflect.Descriptor instead.
func (*ExecTask) Descriptor() ([]byte, []int) {
	return file_monitor_proto_rawDescGZIP(), []int{14}
}

func (x *ExecTask) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *ExecTask) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

func (x *ExecTask) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Ping任务
type PingTask struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PingTaskId    uint32                 `protobuf:"varint,1,opt,name=ping_task_id,json=pingTaskId,proto3" json:"ping_task_id,omitempty"`
	PingType      string                 `protobuf:"bytes,2,opt,name=ping_type,json=pingType,proto3" json:"ping_type,omitempty"`
	PingTarget    string                 `protobuf:"bytes,3,opt,name=ping_target,json=pingTarget,proto3" json:"ping_target,omitempty"`
	Message       string                 `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"` // "ping"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PingTask) Reset() {
	*x = PingTask{}
	mi := &file_monitor_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PingTask) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingTask) ProtoMessage() {}

func (x *PingTask) ProtoReflect() protoreflect.Message {
	mi := &file_monitor_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingTask.ProtoReflect.Descriptor instead.
func (*PingTask) Descriptor() ([]byte, []int) {
	return file_monitor_proto_rawDescGZIP(), []int{15}
}

func (x *PingTask) GetPingTaskId() uint32 {
	if x != nil {
		return x.PingTaskId
	}
	return 0
}

func (x *PingTask) GetPingType() string {
	if x != nil {
		return x.PingType
	}
	return ""
}

func (x *PingTask) GetPingTarget() string {
	if x != nil {
		return x.PingTarget
	}
	return ""
}

func (x *PingTask) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Ping结果
type PingResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        uint32                 `protobuf:"varint,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Value         int32                  `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
	PingType      string                 `protobuf:"bytes,3,opt,name=ping_type,json=pingType,proto3" json:"ping_type,omitempty"`
	FinishedAt    *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=finished_at,json=finishedAt,proto3" json:"finished_at,omitempty"`
	Type          string                 `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"` // "ping_result"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PingResult) Reset() {
	*x = PingResult{}
	mi := &file_monitor_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PingResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingResult) ProtoMessage() {}

func (x *PingResult) ProtoReflect() protoreflect.Message {
	mi := &file_monitor_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingResult.ProtoReflect.Descriptor instead.
func (*PingResult) Descriptor() ([]byte, []int) {
	return file_monitor_proto_rawDescGZIP(), []int{16}
}

func (x *PingResult) GetTaskId() uint32 {
	if x != nil {
		return x.TaskId
	}
	return 0
}

func (x *PingResult) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *PingResult) GetPingType() string {
	if x != nil {
		return x.PingType
	}
	return ""
}

func (x *PingResult) GetFinishedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.FinishedAt
	}
	return nil
}

func (x *PingResult) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

// 错误响应
type ErrorResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"` // "error"
	Error         string                 `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ErrorResponse) Reset() {
	*x = ErrorResponse{}
	mi := &file_monitor_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ErrorResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrorResponse) ProtoMessage() {}

func (x *ErrorResponse) ProtoReflect() protoreflect.Message {
	mi := &file_monitor_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrorResponse.ProtoReflect.Descriptor instead.
func (*ErrorResponse) Descriptor() ([]byte, []int) {
	return file_monitor_proto_rawDescGZIP(), []int{17}
}

func (x *ErrorResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ErrorResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

var File_monitor_proto protoreflect.FileDescriptor

const file_monitor_proto_rawDesc = "" +
	"\n" +
	"\rmonitor.proto\x12\amonitor\x1a\x1fgoogle/protobuf/timestamp.proto\"\xb1\x01\n" +
	"\x0eMonitorRequest\x12*\n" +
	"\x04auth\x18\x01 \x01(\v2\x14.monitor.AuthRequestH\x00R\x04auth\x120\n" +
	"\x06report\x18\x02 \x01(\v2\x16.monitor.MonitorReportH\x00R\x06report\x126\n" +
	"\vping_result\x18\x03 \x01(\v2\x13.monitor.PingResultH\x00R\n" +
	"pingResultB\t\n" +
	"\amessage\"\xc5\x01\n" +
	"\x0fMonitorResponse\x12<\n" +
	"\rauth_response\x18\x01 \x01(\v2\x15.monitor.AuthResponseH\x00R\fauthResponse\x129\n" +
	"\ftask_request\x18\x02 \x01(\v2\x14.monitor.TaskRequestH\x00R\vtaskRequest\x12.\n" +
	"\x05error\x18\x03 \x01(\v2\x16.monitor.ErrorResponseH\x00R\x05errorB\t\n" +
	"\amessage\"#\n" +
	"\vAuthRequest\x12\x14\n" +
	"\x05token\x18\x01 \x01(\tR\x05token\"M\n" +
	"\fAuthResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12#\n" +
	"\rerror_message\x18\x02 \x01(\tR\ferrorMessage\"\x8c\x04\n" +
	"\rMonitorReport\x12\x12\n" +
	"\x04uuid\x18\x01 \x01(\tR\x04uuid\x12$\n" +
	"\x03cpu\x18\x02 \x01(\v2\x12.monitor.CPUReportR\x03cpu\x12$\n" +
	"\x03ram\x18\x03 \x01(\v2\x12.monitor.RamReportR\x03ram\x12&\n" +
	"\x04swap\x18\x04 \x01(\v2\x12.monitor.RamReportR\x04swap\x12'\n" +
	"\x04load\x18\x05 \x01(\v2\x13.monitor.LoadReportR\x04load\x12'\n" +
	"\x04disk\x18\x06 \x01(\v2\x13.monitor.DiskReportR\x04disk\x120\n" +
	"\anetwork\x18\a \x01(\v2\x16.monitor.NetworkReportR\anetwork\x12<\n" +
	"\vconnections\x18\b \x01(\v2\x1a.monitor.ConnectionsReportR\vconnections\x12\x16\n" +
	"\x06uptime\x18\t \x01(\x03R\x06uptime\x12\x18\n" +
	"\aprocess\x18\n" +
	" \x01(\x05R\aprocess\x12\x18\n" +
	"\amessage\x18\v \x01(\tR\amessage\x12\x16\n" +
	"\x06method\x18\f \x01(\tR\x06method\x129\n" +
	"\n" +
	"updated_at\x18\r \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x12\x12\n" +
	"\x04type\x18\x0e \x01(\tR\x04type\"_\n" +
	"\tCPUReport\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x14\n" +
	"\x05cores\x18\x02 \x01(\x05R\x05cores\x12\x12\n" +
	"\x04arch\x18\x03 \x01(\tR\x04arch\x12\x14\n" +
	"\x05usage\x18\x04 \x01(\x01R\x05usage\"5\n" +
	"\tGPUReport\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x14\n" +
	"\x05usage\x18\x02 \x01(\x01R\x05usage\"5\n" +
	"\tRamReport\x12\x14\n" +
	"\x05total\x18\x01 \x01(\x03R\x05total\x12\x12\n" +
	"\x04used\x18\x02 \x01(\x03R\x04used\"P\n" +
	"\n" +
	"LoadReport\x12\x14\n" +
	"\x05load1\x18\x01 \x01(\x01R\x05load1\x12\x14\n" +
	"\x05load5\x18\x02 \x01(\x01R\x05load5\x12\x16\n" +
	"\x06load15\x18\x03 \x01(\x01R\x06load15\"6\n" +
	"\n" +
	"DiskReport\x12\x14\n" +
	"\x05total\x18\x01 \x01(\x03R\x05total\x12\x12\n" +
	"\x04used\x18\x02 \x01(\x03R\x04used\"m\n" +
	"\rNetworkReport\x12\x0e\n" +
	"\x02up\x18\x01 \x01(\x03R\x02up\x12\x12\n" +
	"\x04down\x18\x02 \x01(\x03R\x04down\x12\x19\n" +
	"\btotal_up\x18\x03 \x01(\x03R\atotalUp\x12\x1d\n" +
	"\n" +
	"total_down\x18\x04 \x01(\x03R\ttotalDown\"7\n" +
	"\x11ConnectionsReport\x12\x10\n" +
	"\x03tcp\x18\x01 \x01(\x05R\x03tcp\x12\x10\n" +
	"\x03udp\x18\x02 \x01(\x05R\x03udp\"\x9c\x01\n" +
	"\vTaskRequest\x123\n" +
	"\bterminal\x18\x01 \x01(\v2\x15.monitor.TerminalTaskH\x00R\bterminal\x12'\n" +
	"\x04exec\x18\x02 \x01(\v2\x11.monitor.ExecTaskH\x00R\x04exec\x12'\n" +
	"\x04ping\x18\x03 \x01(\v2\x11.monitor.PingTaskH\x00R\x04pingB\x06\n" +
	"\x04task\"G\n" +
	"\fTerminalTask\x12\x1d\n" +
	"\n" +
	"request_id\x18\x01 \x01(\tR\trequestId\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"W\n" +
	"\bExecTask\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12\x18\n" +
	"\acommand\x18\x02 \x01(\tR\acommand\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\"\x84\x01\n" +
	"\bPingTask\x12 \n" +
	"\fping_task_id\x18\x01 \x01(\rR\n" +
	"pingTaskId\x12\x1b\n" +
	"\tping_type\x18\x02 \x01(\tR\bpingType\x12\x1f\n" +
	"\vping_target\x18\x03 \x01(\tR\n" +
	"pingTarget\x12\x18\n" +
	"\amessage\x18\x04 \x01(\tR\amessage\"\xa9\x01\n" +
	"\n" +
	"PingResult\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\rR\x06taskId\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x05R\x05value\x12\x1b\n" +
	"\tping_type\x18\x03 \x01(\tR\bpingType\x12;\n" +
	"\vfinished_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"finishedAt\x12\x12\n" +
	"\x04type\x18\x05 \x01(\tR\x04type\"=\n" +
	"\rErrorResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x12\x14\n" +
	"\x05error\x18\x02 \x01(\tR\x05error2X\n" +
	"\x0eMonitorService\x12F\n" +
	"\rStreamMonitor\x12\x17.monitor.MonitorRequest\x1a\x18.monitor.MonitorResponse(\x010\x01B.Z,github.com/komari-monitor/komari-agent/protob\x06proto3"

var (
	file_monitor_proto_rawDescOnce sync.Once
	file_monitor_proto_rawDescData []byte
)

func file_monitor_proto_rawDescGZIP() []byte {
	file_monitor_proto_rawDescOnce.Do(func() {
		file_monitor_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_monitor_proto_rawDesc), len(file_monitor_proto_rawDesc)))
	})
	return file_monitor_proto_rawDescData
}

var file_monitor_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_monitor_proto_goTypes = []any{
	(*MonitorRequest)(nil),        // 0: monitor.MonitorRequest
	(*MonitorResponse)(nil),       // 1: monitor.MonitorResponse
	(*AuthRequest)(nil),           // 2: monitor.AuthRequest
	(*AuthResponse)(nil),          // 3: monitor.AuthResponse
	(*MonitorReport)(nil),         // 4: monitor.MonitorReport
	(*CPUReport)(nil),             // 5: monitor.CPUReport
	(*GPUReport)(nil),             // 6: monitor.GPUReport
	(*RamReport)(nil),             // 7: monitor.RamReport
	(*LoadReport)(nil),            // 8: monitor.LoadReport
	(*DiskReport)(nil),            // 9: monitor.DiskReport
	(*NetworkReport)(nil),         // 10: monitor.NetworkReport
	(*ConnectionsReport)(nil),     // 11: monitor.ConnectionsReport
	(*TaskRequest)(nil),           // 12: monitor.TaskRequest
	(*TerminalTask)(nil),          // 13: monitor.TerminalTask
	(*ExecTask)(nil),              // 14: monitor.ExecTask
	(*PingTask)(nil),              // 15: monitor.PingTask
	(*PingResult)(nil),            // 16: monitor.PingResult
	(*ErrorResponse)(nil),         // 17: monitor.ErrorResponse
	(*timestamppb.Timestamp)(nil), // 18: google.protobuf.Timestamp
}
var file_monitor_proto_depIdxs = []int32{
	2,  // 0: monitor.MonitorRequest.auth:type_name -> monitor.AuthRequest
	4,  // 1: monitor.MonitorRequest.report:type_name -> monitor.MonitorReport
	16, // 2: monitor.MonitorRequest.ping_result:type_name -> monitor.PingResult
	3,  // 3: monitor.MonitorResponse.auth_response:type_name -> monitor.AuthResponse
	12, // 4: monitor.MonitorResponse.task_request:type_name -> monitor.TaskRequest
	17, // 5: monitor.MonitorResponse.error:type_name -> monitor.ErrorResponse
	5,  // 6: monitor.MonitorReport.cpu:type_name -> monitor.CPUReport
	7,  // 7: monitor.MonitorReport.ram:type_name -> monitor.RamReport
	7,  // 8: monitor.MonitorReport.swap:type_name -> monitor.RamReport
	8,  // 9: monitor.MonitorReport.load:type_name -> monitor.LoadReport
	9,  // 10: monitor.MonitorReport.disk:type_name -> monitor.DiskReport
	10, // 11: monitor.MonitorReport.network:type_name -> monitor.NetworkReport
	11, // 12: monitor.MonitorReport.connections:type_name -> monitor.ConnectionsReport
	18, // 13: monitor.MonitorReport.updated_at:type_name -> google.protobuf.Timestamp
	13, // 14: monitor.TaskRequest.terminal:type_name -> monitor.TerminalTask
	14, // 15: monitor.TaskRequest.exec:type_name -> monitor.ExecTask
	15, // 16: monitor.TaskRequest.ping:type_name -> monitor.PingTask
	18, // 17: monitor.PingResult.finished_at:type_name -> google.protobuf.Timestamp
	0,  // 18: monitor.MonitorService.StreamMonitor:input_type -> monitor.MonitorRequest
	1,  // 19: monitor.MonitorService.StreamMonitor:output_type -> monitor.MonitorResponse
	19, // [19:20] is the sub-list for method output_type
	18, // [18:19] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_monitor_proto_init() }
func file_monitor_proto_init() {
	if File_monitor_proto != nil {
		return
	}
	file_monitor_proto_msgTypes[0].OneofWrappers = []any{
		(*MonitorRequest_Auth)(nil),
		(*MonitorRequest_Report)(nil),
		(*MonitorRequest_PingResult)(nil),
	}
	file_monitor_proto_msgTypes[1].OneofWrappers = []any{
		(*MonitorResponse_AuthResponse)(nil),
		(*MonitorResponse_TaskRequest)(nil),
		(*MonitorResponse_Error)(nil),
	}
	file_monitor_proto_msgTypes[12].OneofWrappers = []any{
		(*TaskRequest_Terminal)(nil),
		(*TaskRequest_Exec)(nil),
		(*TaskRequest_Ping)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_monitor_proto_rawDesc), len(file_monitor_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_monitor_proto_goTypes,
		DependencyIndexes: file_monitor_proto_depIdxs,
		MessageInfos:      file_monitor_proto_msgTypes,
	}.Build()
	File_monitor_proto = out.File
	file_monitor_proto_goTypes = nil
	file_monitor_proto_depIdxs = nil
}
